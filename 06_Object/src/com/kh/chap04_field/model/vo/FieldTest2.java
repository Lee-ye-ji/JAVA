package com.kh.chap04_field.model.vo;

// 변수 선언 위치에 따른 구분을 보기 위한 클래스(전역, 지역, 매개 등)
public class FieldTest2 {
	/* 클래스 = "필드" + 생성자 + 메소드
	 * 
	 * - 전역변수: 클래스 영역에 작성하는 변수로 같은 클래스 내에서 어디서든 사용
	 * 			메소드 밖에 클래스 안에 생성해주어야 한다.
	 * - 지역변수: 메소드 실행 시, 생성자, 제어문 등 클래스 영역을 제외한 특정한 구역({})안에
	 * 			생성되어 그 지역 안에서만 사용 가능
	 * 
	 * 1. 전역 변수
	 * 		- 멤버 변수(인스턴스 변수)
	 * 		생성: new를 통해 인스턴스(객체) 생성 시 메모리에 할당
	 * 		소멸 : 객체 소멸 시 소멸
	 * 		- 클래스 변수(static 변수) : static 예약어가 붙은 변수 -> 뒤에서 따로 다뤄볼 것
	 * 		생성 : 프로그램 실행 시 static 메모리 영역에 할당
	 * 		소멸 : 프로그램이 종료 될 때 소멸
	 * 2. 지역 변수
	 * 		생성 : 특정한 구역 ({}) 실행 시 메모리 영역에 할당(ex. 메소드 실행 시)
	 * 		소멸 : 특정한 구역({}) 종료 시 소멸 (ex. 메소드 종료 시)
	 */
	
	// 멤버 변수(인스턴스 변수 ) == 필드 값
	private int global; //private는 전역변수
	
	// 생성자 
	public FieldTest2() {}
		
		// 매개변수가 있는 메소드
		public void test(int num) {
			
			//지역 변수(특정 구역 즉, 메소드 영역 내에 작성하는 변수)
			int local; 		// 지역 변수에는 접근 제한자 X
			
			// 매개변수(메소드의 괄호 안에 작성하는 변수)도 지역변수의 일종으로 메소드 영역 안에서만 사용 가능
			// -> int num도 지역 변수
			
			System.out.println("전역 변수 : " + global);
			// 전역 변수는 클래스 전역에서 사용 가능하며
			// 초기화 하지 않았을 때는 JVM이 기본 값을 부여 (int -> 0)
			
			//System.out.println("지역 변수 : " + local);
			// 지역 변수는 초기화 하지 않았을 때 에러 발생 -> 반드시 초기화 해야함
			
			System.out.println("매개 변수 : " + num);
			// 매개변수는 메소드 호출 시 반드시 값이 전달되어 오기 때문에 출력 가능
		}

}
